// sass.hpp must go before all system headers to get the
// __EXTENSIONS__ fix on Solaris.
#include "sass.hpp"
#include "ast.hpp"


namespace Sass {

  /////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////

  SupportsRule::SupportsRule(SourceSpan pstate, SupportsCondition_Obj condition, Block_Obj block)
  : ParentStatement(pstate, block), condition_(condition), idxs_(0)
  {}
  SupportsRule::SupportsRule(const SupportsRule* ptr)
  : ParentStatement(ptr), condition_(ptr->condition_), idxs_(ptr->idxs_)
  {}

  /////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////

  SupportsCondition::SupportsCondition(SourceSpan pstate)
  : Expression(pstate)
  { }

  /////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////

  SupportsOperation::SupportsOperation(SourceSpan pstate, SupportsCondition_Obj l, SupportsCondition_Obj r, Operand o)
  : SupportsCondition(pstate), left_(l), right_(r), operand_(o)
  { }

  /////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////

  SupportsNegation::SupportsNegation(SourceSpan pstate, SupportsCondition_Obj c)
  : SupportsCondition(pstate), condition_(c)
  { }

  /////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////

  SupportsDeclaration::SupportsDeclaration(SourceSpan pstate, Expression_Obj f, Expression_Obj v)
  : SupportsCondition(pstate), feature_(f), value_(v)
  { }

  /////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////

  SupportsInterpolation::SupportsInterpolation(SourceSpan pstate, Expression_Obj v)
  : SupportsCondition(pstate), value_(v)
  { }

  /////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////

  IMPLEMENT_AST_OPERATORS(SupportsRule);
  // IMPLEMENT_AST_OPERATORS(SupportsCondition);
  // IMPLEMENT_AST_OPERATORS(SupportsOperation);
  // IMPLEMENT_AST_OPERATORS(SupportsNegation);
  // IMPLEMENT_AST_OPERATORS(SupportsDeclaration);
  // IMPLEMENT_AST_OPERATORS(SupportsInterpolation);

  /////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////

}
